package com.cn.hwyl.main;

import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Enumeration;

import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import javax.xml.ws.Endpoint;

import org.apache.log4j.Logger;


/**
 * 服务监听类 
 * 用于当启动服务的同时启动wsdl服务。
 * @author hwyl
 *
 */
public class StartMsdlServiceMain implements ServletContextListener{
	
	private static Logger logger = Logger.getLogger(StartMsdlServiceMain.class);
	private static String localIP;
	
	@Override
	public void contextDestroyed(ServletContextEvent arg0) {
		logger.info(new SimpleDateFormat().format(new Date())+":StartMsdlService contextDestroyed !!");
	}

	@Override
	public void contextInitialized(ServletContextEvent arg0) {
		/**
		 * 参数1：服务的发布地址 参数2：服务的实现者
		 */
		try {
			localIP=getLocalIP();
			System.out.println(new SimpleDateFormat("yyyy-MM-dd hh:mm:ss").format(new Date())+" ::启动wsdl服务！！！");
			Endpoint.publish("http://"+localIP+":8081/api/services/CPManageWebservice", new WebServiceCP());
		} catch (Exception e) {
			logger.error(new SimpleDateFormat("yyyy-MM-dd hh:mm:ss").format(new Date())+":StartMsdlService contextInitialized faild!!");
		}
	}
	
	public static String getLocalIP() {
		String ip = "";
		try {
			Enumeration<NetworkInterface> en = NetworkInterface.getNetworkInterfaces();
			while (en.hasMoreElements()) {
				NetworkInterface intf = (NetworkInterface) en.nextElement();
				Enumeration<InetAddress> enumIpAddr = intf.getInetAddresses();
				while (enumIpAddr.hasMoreElements()) {
					InetAddress inetAddress = (InetAddress) enumIpAddr.nextElement();
					if (!inetAddress.isLoopbackAddress() && !inetAddress.isLinkLocalAddress()
							&& inetAddress.isSiteLocalAddress()) {
						ip = inetAddress.getHostAddress().toString();
						break;
					}
				}
			}
		} catch (SocketException e) {
			logger.error(new SimpleDateFormat("yyyy-MM-dd hh:mm:ss").format(new Date())+":getLocalIP faild!!");
		}
		logger.info("getLocalIP>>>>" + ip);
		return ip;
	}

}
